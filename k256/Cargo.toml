[package]
name = "k256"
description = "K-256 (secp256k1) elliptic curve"
version = "0.4.2"
authors = ["RustCrypto Developers"]
license = "Apache-2.0 OR MIT"
documentation = "https://docs.rs/elliptic-curve"
repository = "https://github.com/RustCrypto/elliptic-curves/tree/master/k256"
readme = "README.md"
edition = "2018"
categories = ["cryptography", "cryptography::cryptocurrencies", "no-std"]
keywords = ["bitcoin", "crypto", "ecc", "ethereum", "secp256k1"]

[dependencies]
cfg-if = "0.1"
ecdsa-core = { version = "0.7", package = "ecdsa", optional = true, default-features = false }
elliptic-curve = { version = "0.5", default-features = false, features = ["weierstrass"] }
sha2 = { version = "0.9", optional = true, default-features = false }

[dev-dependencies]
criterion = "0.3"
ecdsa-core = { version = "0.7", package = "ecdsa", default-features = false, features = ["dev"] }
hex = "0.4" # TODO: switch to hex-literal
hex-literal = "0.3"
num-bigint = "0.3"
num-traits = "0.2"
proptest = "0.10"
rand_core = { version = "0.6", features = ["getrandom"] }

[features]
default = ["arithmetic", "oid", "std"]
arithmetic = []
digest = ["ecdsa-core/digest"]
ecdh = ["elliptic-curve/ecdh", "rand", "zeroize"]
ecdsa = ["arithmetic", "ecdsa-core/signer", "ecdsa-core/verifier", "rand", "sha256", "zeroize"]
endomorphism-mul = []
field-montgomery = []
force-32-bit = []
oid = ["elliptic-curve/oid"]
rand = ["elliptic-curve/rand"]
sha256 = ["digest", "sha2"]
test-vectors = []
std = ["elliptic-curve/std"]
zeroize = ["elliptic-curve/zeroize"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[[bench]]
name = "bench"
path = "bench/bench.rs"
harness = false
